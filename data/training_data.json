[{"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article in the graph!", "Schema": "Graph schema: Relevant node labels and their properties  are:\nArticle", "Cypher": "MATCH (n:Article) RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code in the graph!", "Schema": "Graph schema: Relevant node labels and their properties  are:\nCode", "Cypher": "MATCH (n:Code) RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset in the graph!", "Schema": "Graph schema: Relevant node labels and their properties  are:\nDataset", "Cypher": "MATCH (n:Dataset) RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication in the graph!", "Schema": "Graph schema: Relevant node labels and their properties  are:\nSoftwareApplication", "Cypher": "MATCH (n:SoftwareApplication) RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify three paths where Article is a start or end node!", "Schema": "Graph schema: Relevant node labels and their properties  are:\nArticle", "Cypher": " MATCH p=(b:Article)-[r*]->(n) RETURN p UNION MATCH p=(n)-[r*]->(b:Article) RETURN p LIMIT 3"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify three paths where Code is a start or end node!", "Schema": "Graph schema: Relevant node labels and their properties  are:\nCode", "Cypher": " MATCH p=(b:Code)-[r*]->(n) RETURN p UNION MATCH p=(n)-[r*]->(b:Code) RETURN p LIMIT 3"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify three paths where Dataset is a start or end node!", "Schema": "Graph schema: Relevant node labels and their properties  are:\nDataset", "Cypher": " MATCH p=(b:Dataset)-[r*]->(n) RETURN p UNION MATCH p=(n)-[r*]->(b:Dataset) RETURN p LIMIT 3"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify three paths where SoftwareApplication is a start or end node!", "Schema": "Graph schema: Relevant node labels and their properties  are:\nSoftwareApplication", "Cypher": " MATCH p=(b:SoftwareApplication)-[r*]->(n) RETURN p UNION MATCH p=(n)-[r*]->(b:SoftwareApplication) RETURN p LIMIT 3"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their id property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their name property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their creativeWorkType property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication nodes and extract their metadata_url property!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the id recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Article that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Code that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 Dataset that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the name recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the creativeWorkType recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 10 SoftwareApplication that have the metadata_url recorded and return these values!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have id and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN n.id LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Article that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Code that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten Dataset that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have name and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN n.name LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN n.url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have creativeWorkType and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN n.creativeWorkType LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find ten SoftwareApplication that have metadata_url and return their records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN n.metadata_url LIMIT 10"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the id!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Article that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Code that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 Dataset that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find 8 SoftwareApplication that are missing the metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN n LIMIT 8"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the id is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the name is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the creativeWorkType is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication for which the metadata_url is missing!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the id recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.id IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Article that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Code that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of Dataset that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the name recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the creativeWorkType recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the total number of SoftwareApplication that have the metadata_url recorded!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url IS NOT NULL RETURN count(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 1!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'1'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 2!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'2'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'3'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 4!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'4'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 5!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'5'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 6!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'6'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 7!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'7'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 8!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'8'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 9!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'9'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 10!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'10'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 11!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'11'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which id is 12!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article {id:'12'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 61!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'61'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 62!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'62'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 63!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'63'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 64!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'64'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 65!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'65'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 66!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'66'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 67!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'67'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 68!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'68'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 69!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'69'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 70!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'70'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 71!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'71'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which id is 72!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code {id:'72'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 31!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'31'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 32!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'32'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 33!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'33'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 34!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'34'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 35!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'35'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 36!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'36'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 37!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'37'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 38!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'38'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 39!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'39'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 40!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'40'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 41!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'41'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which id is 42!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset {id:'42'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 76!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'76'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 77!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'77'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 78!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'78'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 79!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'79'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 80!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'80'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 81!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'81'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 82!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'82'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 83!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'83'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 84!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'84'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 85!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'85'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 86!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'86'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which id is 87!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication {id:'87'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://ieeexplore.ieee.org/abstract/document/9651740!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://ieeexplore.ieee.org/abstract/document/9651740'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/1!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/1'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://ieeexplore.ieee.org/abstract/document/7532555!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://ieeexplore.ieee.org/abstract/document/7532555'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/2!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/2'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://ieeexplore.ieee.org/abstract/document/8791194!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://ieeexplore.ieee.org/abstract/document/8791194'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/3'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://ieeexplore.ieee.org/abstract/document/8791225!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://ieeexplore.ieee.org/abstract/document/8791225'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/4!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/4'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/5!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/5'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is Whois? Deep Author Name Disambiguation Using Bibliographic Data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'Whois? Deep Author Name Disambiguation Using Bibliographic Data'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/6!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/6'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is COIN: Counterfactual Image Generation for VQA Interpretation!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'COIN: Counterfactual Image Generation for VQA Interpretation'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://arxiv.org/abs/2201.03342!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://arxiv.org/abs/2201.03342'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/7!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/7'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://arxiv.org/abs/2107.04382!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://arxiv.org/abs/2107.04382'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/8!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/8'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://link.springer.com/article/10.1007/s11263-023-01926-3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://link.springer.com/article/10.1007/s11263-023-01926-3'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/9!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/9'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://arxiv.org/abs/2202.08967!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://arxiv.org/abs/2202.08967'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/10!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/10'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/11!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/11'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article {name:'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url is https://arxiv.org/abs/2103.06727!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article {url:'https://arxiv.org/abs/2103.06727'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article {creativeWorkType:'article'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url is http://193.175.161.176:5000/publication/12!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article {metadata_url:'http://193.175.161.176:5000/publication/12'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is FAIRDS-SDs!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'FAIRDS-SDs'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.com/fdda1/fairds-sds!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.com/fdda1/fairds-sds'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/61!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/61'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is fc-service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'fc-service'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.com/fdda1/fc-service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.com/fdda1/fc-service'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/62!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/62'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is fdo-manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'fdo-manager'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.com/fdda1/fdo-manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.com/fdda1/fdo-manager'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/63!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/63'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is FDOM!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'FDOM'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.com/fdda1/fdom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.com/fdda1/fdom'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/64!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/64'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is fdom-playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'fdom-playground'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.com/fdda1/fdom-playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.com/fdda1/fdom-playground'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/65!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/65'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is fdomAPI!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'fdomAPI'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.com/fdda1/fdomapi!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.com/fdda1/fdomapi'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/66!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/66'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is sd-signer!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'sd-signer'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.com/fdda1/sd-signer!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.com/fdda1/sd-signer'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/67!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/67'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is Adaptive Digital Library!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'Adaptive Digital Library'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/68!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/68'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'automatic-diagnosis-from-clinical-texts'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/69!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/69'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is SAT Solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'SAT Solver'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/70!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/70'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'author-name-disambiguation-using-mcmc'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/71!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/71'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name is entiy-recognition-and-linkage-for-reference-data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code {name:'entiy-recognition-and-linkage-for-reference-data'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code {url:'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url is http://193.175.161.176:5000/code/72!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code {metadata_url:'http://193.175.161.176:5000/code/72'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is Social Media Sentiments Analysis Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'Social Media Sentiments Analysis Dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/31!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/31'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is PII | External Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'PII | External Dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/32!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/32'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is IMDB Movie Dataset Till Dec-2023!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'IMDB Movie Dataset Till Dec-2023'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/33!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/33'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is LLM: Mistral-7B Instruct texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'LLM: Mistral-7B Instruct texts'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/34!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/34'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is Fake News Detection!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'Fake News Detection'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/35!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/35'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is Glassdoor Data science Jobs - 2024!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'Glassdoor Data science Jobs - 2024'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/36!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/36'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is Grocery Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'Grocery Dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/37!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/37'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is Mental Health Insights: Vulnerable Cancer Patients!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'Mental Health Insights: Vulnerable Cancer Patients'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/38!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/38'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is Brand Sentiment Analysis Dataset (Twitter)!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'Brand Sentiment Analysis Dataset (Twitter)'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/39!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/39'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is Books Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'Books Dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/books-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/elvinrustam/books-dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/40!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/40'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is AI Vs Human Text!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'AI Vs Human Text'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/41!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/41'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name is YouTube Trending Videos Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset {name:'YouTube Trending Videos Dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset {url:'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset {creativeWorkType:'dataset'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url is http://193.175.161.176:5000/dataset/42!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/42'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is Author Name Disambiguation!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'Author Name Disambiguation'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/76!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/76'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is Technology Radar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'Technology Radar'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is https://fdda1.gitlab.io/technology-radar/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'https://fdda1.gitlab.io/technology-radar/'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/77!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/77'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is FDO Manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'FDO Manager'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is http://193.175.161.105:8000/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'http://193.175.161.105:8000/'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/78!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/78'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is FDO Playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'FDO Playground'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is http://193.175.161.105:8080/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'http://193.175.161.105:8080/'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/79!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/79'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is SAT Solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'SAT Solver'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is http://116.203.68.5:5002/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'http://116.203.68.5:5002/'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/80!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/80'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is Metadata Extraction!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'Metadata Extraction'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is http://193.175.161.122:8080/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'http://193.175.161.122:8080/'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/81!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/81'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is Chatbot-inference!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'Chatbot-inference'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is http://129.26.160.216:7860/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'http://129.26.160.216:7860/'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/82!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/82'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'automatic-diagnosis-from-clinical-texts'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/83!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/83'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is FDO documentation in Gitlab!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'FDO documentation in Gitlab'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is https://fdda1.gitlab.io/fdom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'https://fdda1.gitlab.io/fdom'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/84!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/84'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is PADME Central Service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'PADME Central Service'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is https://requester.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'https://requester.padme-analytics.de/'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/85!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/85'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is PADME Storehouse Platform!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'PADME Storehouse Platform'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is https://storehouse.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'https://storehouse.padme-analytics.de/'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/86!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/86'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name is PADME Train Creation Wizard!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication {name:'PADME Train Creation Wizard'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url is http://creator.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {url:'http://creator.padme-analytics.de/'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication {creativeWorkType:'code'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/87!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/87'}) RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (n:Article) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (n:Code) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (n:Dataset) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the id of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.id  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Article, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Code, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the Dataset, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the name of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.name  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the creativeWorkType of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.creativeWorkType  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Return the metadata_url of the SoftwareApplication, skip the first 2 records and return 2 records!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) RETURN n.metadata_url  SKIP 2 LIMIT 2"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with M, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'M' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with A, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'A' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with E, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'E' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with A, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'A' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with E, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'E' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with W, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'W' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with C, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'C' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with B, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'B' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with S, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'S' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with E, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'E' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with E, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'E' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with H, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'H' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with a, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'a' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with F, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'F' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with f, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'f' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with f, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'f' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with F, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'F' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with f, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'f' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with f, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'f' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with s, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 's' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with A, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'A' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with a, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'a' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with S, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'S' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with a, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'a' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with e, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'e' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with S, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'S' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with P, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'P' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with I, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'I' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with L, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'L' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with F, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'F' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with G, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'G' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with G, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'G' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with M, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'M' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with B, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'B' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with B, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'B' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with A, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'A' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with Y, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'Y' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with d, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'd' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with A, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'A' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with T, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'T' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with F, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'F' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with F, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'F' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with S, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'S' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with M, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'M' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with C, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'C' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with a, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'a' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with F, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'F' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with P, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'P' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with P, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'P' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with P, skip the first 2 records and return the next 2 records of name!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'P' WITH n.name AS name SKIP 2 LIMIT 2 RETURN name"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with h, skip the first 2 records and return the next 2 records of url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'h' WITH n.url AS url SKIP 2 LIMIT 2 RETURN url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with c, skip the first 2 records and return the next 2 records of creativeWorkType!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'c' WITH n.creativeWorkType AS creativeWorkType SKIP 2 LIMIT 2 RETURN creativeWorkType"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with h, skip the first 2 records and return the next 2 records of metadata_url!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'h' WITH n.metadata_url AS metadata_url SKIP 2 LIMIT 2 RETURN metadata_url"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://ieeexplore.ieee.org/abstract/document/9651740!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://ieeexplore.ieee.org/abstract/document/9651740' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/1!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/1' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://ieeexplore.ieee.org/abstract/document/7532555!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://ieeexplore.ieee.org/abstract/document/7532555' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/2!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/2' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://ieeexplore.ieee.org/abstract/document/8791194!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://ieeexplore.ieee.org/abstract/document/8791194' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/3' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://ieeexplore.ieee.org/abstract/document/8791225!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://ieeexplore.ieee.org/abstract/document/8791225' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/4!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/4' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/5!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/5' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is Whois? Deep Author Name Disambiguation Using Bibliographic Data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'Whois? Deep Author Name Disambiguation Using Bibliographic Data' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/6!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/6' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is COIN: Counterfactual Image Generation for VQA Interpretation!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'COIN: Counterfactual Image Generation for VQA Interpretation' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://arxiv.org/abs/2201.03342!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://arxiv.org/abs/2201.03342' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/7!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/7' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://arxiv.org/abs/2107.04382!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://arxiv.org/abs/2107.04382' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/8!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/8' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://link.springer.com/article/10.1007/s11263-023-01926-3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://link.springer.com/article/10.1007/s11263-023-01926-3' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/9!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/9' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://arxiv.org/abs/2202.08967!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://arxiv.org/abs/2202.08967' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/10!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/10' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/11!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/11' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name = 'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url is https://arxiv.org/abs/2103.06727!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url = 'https://arxiv.org/abs/2103.06727' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType = 'article' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url is http://193.175.161.176:5000/publication/12!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url = 'http://193.175.161.176:5000/publication/12' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is FAIRDS-SDs!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'FAIRDS-SDs' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.com/fdda1/fairds-sds!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.com/fdda1/fairds-sds' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/61!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/61' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is fc-service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'fc-service' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.com/fdda1/fc-service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.com/fdda1/fc-service' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/62!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/62' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is fdo-manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'fdo-manager' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.com/fdda1/fdo-manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.com/fdda1/fdo-manager' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/63!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/63' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is FDOM!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'FDOM' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.com/fdda1/fdom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.com/fdda1/fdom' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/64!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/64' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is fdom-playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'fdom-playground' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.com/fdda1/fdom-playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.com/fdda1/fdom-playground' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/65!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/65' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is fdomAPI!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'fdomAPI' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.com/fdda1/fdomapi!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.com/fdda1/fdomapi' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/66!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/66' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is sd-signer!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'sd-signer' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.com/fdda1/sd-signer!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.com/fdda1/sd-signer' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/67!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/67' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is Adaptive Digital Library!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'Adaptive Digital Library' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/68!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/68' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'automatic-diagnosis-from-clinical-texts' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/69!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/69' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is SAT Solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'SAT Solver' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/70!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/70' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'author-name-disambiguation-using-mcmc' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/71!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/71' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name is entiy-recognition-and-linkage-for-reference-data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name = 'entiy-recognition-and-linkage-for-reference-data' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url = 'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url is http://193.175.161.176:5000/code/72!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url = 'http://193.175.161.176:5000/code/72' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is Social Media Sentiments Analysis Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'Social Media Sentiments Analysis Dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/31!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/31' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is PII | External Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'PII | External Dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/32!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/32' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is IMDB Movie Dataset Till Dec-2023!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'IMDB Movie Dataset Till Dec-2023' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/33!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/33' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is LLM: Mistral-7B Instruct texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'LLM: Mistral-7B Instruct texts' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/34!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/34' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is Fake News Detection!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'Fake News Detection' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/35!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/35' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is Glassdoor Data science Jobs - 2024!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'Glassdoor Data science Jobs - 2024' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/36!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/36' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is Grocery Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'Grocery Dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/37!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/37' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is Mental Health Insights: Vulnerable Cancer Patients!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'Mental Health Insights: Vulnerable Cancer Patients' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/38!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/38' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is Brand Sentiment Analysis Dataset (Twitter)!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'Brand Sentiment Analysis Dataset (Twitter)' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/39!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/39' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is Books Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'Books Dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/elvinrustam/books-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/elvinrustam/books-dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/40!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/40' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is AI Vs Human Text!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'AI Vs Human Text' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/41!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/41' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name is YouTube Trending Videos Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name = 'YouTube Trending Videos Dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url = 'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType = 'dataset' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url is http://193.175.161.176:5000/dataset/42!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url = 'http://193.175.161.176:5000/dataset/42' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is Author Name Disambiguation!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'Author Name Disambiguation' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/76!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/76' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is Technology Radar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'Technology Radar' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is https://fdda1.gitlab.io/technology-radar/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'https://fdda1.gitlab.io/technology-radar/' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/77!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/77' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is FDO Manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'FDO Manager' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is http://193.175.161.105:8000/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'http://193.175.161.105:8000/' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/78!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/78' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is FDO Playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'FDO Playground' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is http://193.175.161.105:8080/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'http://193.175.161.105:8080/' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/79!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/79' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is SAT Solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'SAT Solver' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is http://116.203.68.5:5002/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'http://116.203.68.5:5002/' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/80!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/80' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is Metadata Extraction!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'Metadata Extraction' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is http://193.175.161.122:8080/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'http://193.175.161.122:8080/' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/81!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/81' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is Chatbot-inference!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'Chatbot-inference' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is http://129.26.160.216:7860/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'http://129.26.160.216:7860/' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/82!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/82' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'automatic-diagnosis-from-clinical-texts' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/83!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/83' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is FDO documentation in Gitlab!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'FDO documentation in Gitlab' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is https://fdda1.gitlab.io/fdom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'https://fdda1.gitlab.io/fdom' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/84!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/84' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is PADME Central Service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'PADME Central Service' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is https://requester.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'https://requester.padme-analytics.de/' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/85!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/85' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is PADME Storehouse Platform!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'PADME Storehouse Platform' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is https://storehouse.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'https://storehouse.padme-analytics.de/' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/86!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/86' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name is PADME Train Creation Wizard!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name = 'PADME Train Creation Wizard' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url is http://creator.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url = 'http://creator.padme-analytics.de/' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType = 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/87!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url = 'http://193.175.161.176:5000/webapplication/87' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains MexPu!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'MexPu' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains Autom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'Autom' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains EXCIT!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'EXCIT' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains An En!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'An En' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains ECOL:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'ECOL:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains Whois!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'Whois' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains COIN:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'COIN:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains Bib2A!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'Bib2A' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains Skele!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'Skele' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains Ensem!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'Ensem' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains Envir!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'Envir' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where name contains Hybri!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name CONTAINS 'Hybri' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where creativeWorkType contains artic!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType CONTAINS 'artic' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains FAIRD!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'FAIRD' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains fc-se!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'fc-se' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains fdo-m!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'fdo-m' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains FDOM!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'FDOM' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains fdom-!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'fdom-' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains fdomA!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'fdomA' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains sd-si!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'sd-si' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains Adapt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'Adapt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains autom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'autom' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains SAT S!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'SAT S' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains autho!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'autho' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where name contains entiy!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name CONTAINS 'entiy' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains Socia!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'Socia' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains PII |!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'PII |' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains IMDB !", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'IMDB ' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains LLM: !", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'LLM: ' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains Fake !", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'Fake ' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains Glass!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'Glass' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains Groce!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'Groce' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains Menta!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'Menta' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains Brand!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'Brand' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains Books!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'Books' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains AI Vs!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'AI Vs' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where name contains YouTu!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name CONTAINS 'YouTu' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where creativeWorkType contains datas!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType CONTAINS 'datas' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains Autho!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'Autho' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains Techn!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'Techn' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains FDO M!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'FDO M' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains FDO P!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'FDO P' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains SAT S!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'SAT S' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains Metad!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'Metad' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains Chatb!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'Chatb' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains autom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'autom' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains FDO d!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'FDO d' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains PADME!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'PADME' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains PADME!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'PADME' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains https!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'https' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where name contains PADME!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name CONTAINS 'PADME' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where creativeWorkType contains code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType CONTAINS 'code' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication where metadata_url contains http:!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url CONTAINS 'http:' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with Mex!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'Mex' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with Aut!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'Aut' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with EXC!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'EXC' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with An !", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'An ' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with ECO!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'ECO' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with Who!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'Who' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with COI!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'COI' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with Bib!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'Bib' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with Ske!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'Ske' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with Ens!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'Ens' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with Env!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'Env' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which name starts with Hyb!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name STARTS WITH 'Hyb' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which creativeWorkType starts with art!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType STARTS WITH 'art' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Article for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with FAI!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'FAI' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with fc-!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'fc-' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with fdo!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'fdo' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with FDO!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'FDO' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with fdo!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'fdo' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with fdo!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'fdo' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with sd-!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'sd-' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with Ada!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'Ada' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with aut!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'aut' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with SAT!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'SAT' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with aut!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'aut' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which name starts with ent!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name STARTS WITH 'ent' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Code for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with Soc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'Soc' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with PII!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'PII' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with IMD!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'IMD' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with LLM!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'LLM' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with Fak!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'Fak' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with Gla!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'Gla' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with Gro!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'Gro' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with Men!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'Men' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with Bra!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'Bra' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with Boo!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'Boo' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with AI !", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'AI ' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which name starts with You!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name STARTS WITH 'You' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which creativeWorkType starts with dat!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType STARTS WITH 'dat' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the Dataset for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with Aut!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'Aut' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with Tec!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'Tec' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with FDO!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'FDO' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with FDO!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'FDO' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with SAT!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'SAT' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with Met!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'Met' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with Cha!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'Cha' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with aut!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'aut' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with FDO!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'FDO' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with PAD!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'PAD' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with PAD!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'PAD' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which name starts with PAD!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name STARTS WITH 'PAD' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which creativeWorkType starts with cod!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType STARTS WITH 'cod' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the SoftwareApplication for which metadata_url starts with htt!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url STARTS WITH 'htt' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with Me!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'Me.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with Au!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'Au.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with EX!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'EX.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with An!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'An.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with EC!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'EC.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with Wh!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'Wh.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with CO!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'CO.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with Bi!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'Bi.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with Sk!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'Sk.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with En!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'En.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with En!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'En.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where name ends with Hy!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (n:Article) WHERE n.name =~'Hy.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where creativeWorkType ends with ar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (n:Article) WHERE n.creativeWorkType =~'ar.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Article where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (n:Article) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with FA!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'FA.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with fc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'fc.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with fd!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'fd.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with FD!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'FD.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with fd!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'fd.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with fd!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'fd.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with sd!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'sd.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with Ad!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'Ad.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with au!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'au.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with SA!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'SA.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with au!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'au.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where name ends with en!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (n:Code) WHERE n.name =~'en.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (n:Code) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Code where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (n:Code) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with So!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'So.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with PI!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'PI.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with IM!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'IM.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with LL!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'LL.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with Fa!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'Fa.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with Gl!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'Gl.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with Gr!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'Gr.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with Me!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'Me.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with Br!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'Br.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with Bo!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'Bo.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with AI!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'AI.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where name ends with Yo!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.name =~'Yo.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where creativeWorkType ends with da!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.creativeWorkType =~'da.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the Dataset where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (n:Dataset) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with Au!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'Au.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with Te!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'Te.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with FD!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'FD.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with FD!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'FD.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with SA!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'SA.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with Me!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'Me.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with Ch!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'Ch.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with au!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'au.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with FD!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'FD.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with PA!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'PA.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with PA!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'PA.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where name ends with PA!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.name =~'PA.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where creativeWorkType ends with co!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.creativeWorkType =~'co.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Fetch the SoftwareApplication where metadata_url ends with ht!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (n:SoftwareApplication) WHERE n.metadata_url =~'ht.*' RETURN n"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 1?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'1'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 2?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'2'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 3?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'3'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 4?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'4'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 5?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'5'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 6?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'6'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 7?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'7'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 8?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'8'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 9?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'9'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 10?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'10'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 11?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'11'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where id is 12?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'12'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 61?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'61'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 62?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'62'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 63?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'63'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 64?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'64'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 65?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'65'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 66?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'66'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 67?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'67'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 68?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'68'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 69?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'69'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 70?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'70'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 71?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'71'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where id is 72?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'72'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 31?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'31'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 32?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'32'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 33?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'33'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 34?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'34'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 35?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'35'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 36?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'36'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 37?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'37'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 38?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'38'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 39?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'39'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 40?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'40'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 41?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'41'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where id is 42?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'42'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 76?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'76'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 77?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'77'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 78?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'78'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 79?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'79'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 80?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'80'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 81?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'81'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 82?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'82'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 83?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'83'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 84?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'84'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 85?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'85'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 86?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'86'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where id is 87?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'87'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://ieeexplore.ieee.org/abstract/document/9651740?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/9651740'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/1?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/1'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://ieeexplore.ieee.org/abstract/document/7532555?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/7532555'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/2?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/2'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://ieeexplore.ieee.org/abstract/document/8791194?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791194'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/3?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/3'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://ieeexplore.ieee.org/abstract/document/8791225?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791225'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/4?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/4'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/5?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/5'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is Whois? Deep Author Name Disambiguation Using Bibliographic Data?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Whois? Deep Author Name Disambiguation Using Bibliographic Data'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/6?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/6'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is COIN: Counterfactual Image Generation for VQA Interpretation?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'COIN: Counterfactual Image Generation for VQA Interpretation'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://arxiv.org/abs/2201.03342?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2201.03342'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/7?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/7'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://arxiv.org/abs/2107.04382?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2107.04382'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/8?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/8'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://link.springer.com/article/10.1007/s11263-023-01926-3?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/article/10.1007/s11263-023-01926-3'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/9?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/9'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://arxiv.org/abs/2202.08967?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2202.08967'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/10?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/10'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/11?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/11'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where url is https://arxiv.org/abs/2103.06727?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2103.06727'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where creativeWorkType is article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Article where metadata_url is http://193.175.161.176:5000/publication/12?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/12'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is FAIRDS-SDs?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FAIRDS-SDs'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.com/fdda1/fairds-sds?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fairds-sds'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/61?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/61'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is fc-service?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fc-service'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.com/fdda1/fc-service?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fc-service'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/62?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/62'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is fdo-manager?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdo-manager'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.com/fdda1/fdo-manager?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdo-manager'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/63?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/63'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is FDOM?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FDOM'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.com/fdda1/fdom?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/64?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/64'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is fdom-playground?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdom-playground'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.com/fdda1/fdom-playground?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom-playground'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/65?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/65'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is fdomAPI?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdomAPI'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.com/fdda1/fdomapi?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdomapi'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/66?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/66'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is sd-signer?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'sd-signer'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.com/fdda1/sd-signer?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/sd-signer'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/67?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/67'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is Adaptive Digital Library?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'Adaptive Digital Library'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/68?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/68'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is automatic-diagnosis-from-clinical-texts?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'automatic-diagnosis-from-clinical-texts'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/69?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/69'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is SAT Solver?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'SAT Solver'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/70?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/70'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is author-name-disambiguation-using-mcmc?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'author-name-disambiguation-using-mcmc'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/71?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/71'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where name is entiy-recognition-and-linkage-for-reference-data?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'entiy-recognition-and-linkage-for-reference-data'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Code where metadata_url is http://193.175.161.176:5000/code/72?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/72'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is Social Media Sentiments Analysis Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Social Media Sentiments Analysis Dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/31?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/31'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is PII | External Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'PII | External Dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/32?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/32'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is IMDB Movie Dataset Till Dec-2023?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'IMDB Movie Dataset Till Dec-2023'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/33?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/33'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is LLM: Mistral-7B Instruct texts?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'LLM: Mistral-7B Instruct texts'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/34?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/34'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is Fake News Detection?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Fake News Detection'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/35?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/35'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is Glassdoor Data science Jobs - 2024?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Glassdoor Data science Jobs - 2024'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/36?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/36'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is Grocery Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Grocery Dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/37?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/37'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is Mental Health Insights: Vulnerable Cancer Patients?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Mental Health Insights: Vulnerable Cancer Patients'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/38?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/38'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is Brand Sentiment Analysis Dataset (Twitter)?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Brand Sentiment Analysis Dataset (Twitter)'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/39?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/39'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is Books Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Books Dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/elvinrustam/books-dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/books-dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/40?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/40'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is AI Vs Human Text?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'AI Vs Human Text'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/41?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/41'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where name is YouTube Trending Videos Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'YouTube Trending Videos Dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where creativeWorkType is dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from Dataset where metadata_url is http://193.175.161.176:5000/dataset/42?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/42'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is Author Name Disambiguation?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Author Name Disambiguation'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/76?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/76'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is Technology Radar?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Technology Radar'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is https://fdda1.gitlab.io/technology-radar/?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/technology-radar/'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/77?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/77'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is FDO Manager?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Manager'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is http://193.175.161.105:8000/?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8000/'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/78?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/78'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is FDO Playground?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Playground'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is http://193.175.161.105:8080/?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8080/'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/79?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/79'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is SAT Solver?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'SAT Solver'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is http://116.203.68.5:5002/?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://116.203.68.5:5002/'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/80?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/80'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is Metadata Extraction?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Metadata Extraction'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is http://193.175.161.122:8080/?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.122:8080/'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/81?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/81'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is Chatbot-inference?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Chatbot-inference'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is http://129.26.160.216:7860/?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://129.26.160.216:7860/'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/82?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/82'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is automatic-diagnosis-from-clinical-texts?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'automatic-diagnosis-from-clinical-texts'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/83?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/83'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is FDO documentation in Gitlab?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO documentation in Gitlab'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is https://fdda1.gitlab.io/fdom?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/fdom'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/84?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/84'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is PADME Central Service?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Central Service'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is https://requester.padme-analytics.de/?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://requester.padme-analytics.de/'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/85?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/85'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is PADME Storehouse Platform?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Storehouse Platform'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is https://storehouse.padme-analytics.de/?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://storehouse.padme-analytics.de/'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/86?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/86'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where name is PADME Train Creation Wizard?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Train Creation Wizard'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where url is http://creator.padme-analytics.de/?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://creator.padme-analytics.de/'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where creativeWorkType is code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many unique relationships originate from SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/87?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/87'})-[r]->() RETURN COUNT(DISTINCT TYPE(r)) AS rels, TYPE(r)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 1, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'1'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 2, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'2'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 3, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'3'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 4, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'4'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 5, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'5'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 6, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'6'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 7, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'7'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 8, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'8'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 9, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'9'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 10, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'10'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 11, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'11'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which id is 12, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'12'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 61, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'61'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 62, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'62'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 63, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'63'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 64, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'64'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 65, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'65'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 66, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'66'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 67, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'67'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 68, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'68'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 69, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'69'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 70, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'70'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 71, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'71'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which id is 72, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'72'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 31, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'31'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 32, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'32'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 33, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'33'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 34, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'34'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 35, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'35'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 36, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'36'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 37, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'37'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 38, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'38'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 39, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'39'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 40, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'40'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 41, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'41'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which id is 42, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'42'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 76, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'76'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 77, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'77'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 78, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'78'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 79, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'79'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 80, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'80'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 81, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'81'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 82, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'82'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 83, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'83'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 84, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'84'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 85, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'85'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 86, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'86'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which id is 87, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'87'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/9651740, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/9651740'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/1, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/1'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/7532555, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/7532555'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/2, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/2'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791194, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791194'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/3, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/3'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791225, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791225'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/4, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/4'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/5, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/5'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is Whois? Deep Author Name Disambiguation Using Bibliographic Data, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Whois? Deep Author Name Disambiguation Using Bibliographic Data'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/6, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/6'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is COIN: Counterfactual Image Generation for VQA Interpretation, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'COIN: Counterfactual Image Generation for VQA Interpretation'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://arxiv.org/abs/2201.03342, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2201.03342'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/7, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/7'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://arxiv.org/abs/2107.04382, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2107.04382'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/8, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/8'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://link.springer.com/article/10.1007/s11263-023-01926-3, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/article/10.1007/s11263-023-01926-3'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/9, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/9'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://arxiv.org/abs/2202.08967, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2202.08967'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/10, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/10'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/11, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/11'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which url is https://arxiv.org/abs/2103.06727, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2103.06727'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which creativeWorkType is article, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/12, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/12'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is FAIRDS-SDs, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FAIRDS-SDs'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.com/fdda1/fairds-sds, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fairds-sds'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/61, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/61'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is fc-service, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fc-service'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.com/fdda1/fc-service, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fc-service'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/62, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/62'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is fdo-manager, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdo-manager'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.com/fdda1/fdo-manager, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdo-manager'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/63, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/63'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is FDOM, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FDOM'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.com/fdda1/fdom, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/64, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/64'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is fdom-playground, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdom-playground'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.com/fdda1/fdom-playground, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom-playground'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/65, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/65'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is fdomAPI, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdomAPI'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.com/fdda1/fdomapi, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdomapi'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/66, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/66'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is sd-signer, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'sd-signer'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.com/fdda1/sd-signer, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/sd-signer'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/67, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/67'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is Adaptive Digital Library, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'Adaptive Digital Library'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/68, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/68'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is automatic-diagnosis-from-clinical-texts, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'automatic-diagnosis-from-clinical-texts'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/69, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/69'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is SAT Solver, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'SAT Solver'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/70, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/70'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is author-name-disambiguation-using-mcmc, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'author-name-disambiguation-using-mcmc'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/71, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/71'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which name is entiy-recognition-and-linkage-for-reference-data, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'entiy-recognition-and-linkage-for-reference-data'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Code for which metadata_url is http://193.175.161.176:5000/code/72, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/72'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is Social Media Sentiments Analysis Dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Social Media Sentiments Analysis Dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/31, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/31'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is PII | External Dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'PII | External Dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/32, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/32'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is IMDB Movie Dataset Till Dec-2023, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'IMDB Movie Dataset Till Dec-2023'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/33, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/33'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is LLM: Mistral-7B Instruct texts, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'LLM: Mistral-7B Instruct texts'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/34, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/34'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is Fake News Detection, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Fake News Detection'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/35, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/35'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is Glassdoor Data science Jobs - 2024, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Glassdoor Data science Jobs - 2024'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/36, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/36'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is Grocery Dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Grocery Dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/37, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/37'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is Mental Health Insights: Vulnerable Cancer Patients, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Mental Health Insights: Vulnerable Cancer Patients'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/38, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/38'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is Brand Sentiment Analysis Dataset (Twitter), by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Brand Sentiment Analysis Dataset (Twitter)'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/39, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/39'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is Books Dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Books Dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/books-dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/books-dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/40, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/40'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is AI Vs Human Text, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'AI Vs Human Text'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/41, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/41'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which name is YouTube Trending Videos Dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'YouTube Trending Videos Dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which creativeWorkType is dataset, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/42, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/42'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is Author Name Disambiguation, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Author Name Disambiguation'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/76, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/76'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is Technology Radar, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Technology Radar'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is https://fdda1.gitlab.io/technology-radar/, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/technology-radar/'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/77, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/77'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is FDO Manager, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Manager'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is http://193.175.161.105:8000/, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8000/'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/78, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/78'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is FDO Playground, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Playground'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is http://193.175.161.105:8080/, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8080/'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/79, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/79'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is SAT Solver, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'SAT Solver'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is http://116.203.68.5:5002/, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://116.203.68.5:5002/'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/80, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/80'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is Metadata Extraction, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Metadata Extraction'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is http://193.175.161.122:8080/, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.122:8080/'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/81, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/81'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is Chatbot-inference, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Chatbot-inference'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is http://129.26.160.216:7860/, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://129.26.160.216:7860/'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/82, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/82'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is automatic-diagnosis-from-clinical-texts, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'automatic-diagnosis-from-clinical-texts'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/83, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/83'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is FDO documentation in Gitlab, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO documentation in Gitlab'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is https://fdda1.gitlab.io/fdom, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/fdom'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/84, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/84'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is PADME Central Service, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Central Service'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is https://requester.padme-analytics.de/, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://requester.padme-analytics.de/'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/85, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/85'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is PADME Storehouse Platform, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Storehouse Platform'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is https://storehouse.padme-analytics.de/, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://storehouse.padme-analytics.de/'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/86, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/86'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which name is PADME Train Creation Wizard, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Train Creation Wizard'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which url is http://creator.padme-analytics.de/, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://creator.padme-analytics.de/'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which creativeWorkType is code, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "How many nodes are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/87, by exactly two different types of relationships?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/87'})-[r]->(n) WITH n, COLLECT(DISTINCT TYPE(r)) AS Types WHERE SIZE(Types) = 2 RETURN COUNT(n)"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 1, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'1'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 2, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'2'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 3, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'3'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 4, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'4'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 5, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'5'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 6, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'6'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 7, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'7'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 8, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'8'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 9, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'9'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 10, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'10'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 11, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'11'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 12, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'12'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 61, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'61'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 62, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'62'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 63, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'63'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 64, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'64'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 65, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'65'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 66, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'66'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 67, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'67'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 68, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'68'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 69, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'69'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 70, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'70'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 71, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'71'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 72, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'72'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 31, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'31'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 32, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'32'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 33, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'33'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 34, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'34'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 35, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'35'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 36, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'36'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 37, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'37'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 38, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'38'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 39, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'39'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 40, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'40'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 41, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'41'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 42, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'42'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 76, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'76'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 77, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'77'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 78, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'78'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 79, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'79'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 80, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'80'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 81, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'81'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 82, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'82'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 83, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'83'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 84, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'84'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 85, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'85'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 86, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'86'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 87, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'87'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/9651740, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/9651740'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/1, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/1'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/7532555, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/7532555'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/2, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/2'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791194, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791194'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/3, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/3'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791225, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791225'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/4, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/4'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/5, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/5'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Whois? Deep Author Name Disambiguation Using Bibliographic Data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Whois? Deep Author Name Disambiguation Using Bibliographic Data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/6, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/6'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is COIN: Counterfactual Image Generation for VQA Interpretation, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'COIN: Counterfactual Image Generation for VQA Interpretation'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://arxiv.org/abs/2201.03342, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2201.03342'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/7, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/7'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://arxiv.org/abs/2107.04382, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2107.04382'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/8, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/8'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://link.springer.com/article/10.1007/s11263-023-01926-3, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/article/10.1007/s11263-023-01926-3'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/9, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/9'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://arxiv.org/abs/2202.08967, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2202.08967'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/10, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/10'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/11, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/11'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://arxiv.org/abs/2103.06727, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2103.06727'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/12, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/12'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is FAIRDS-SDs, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FAIRDS-SDs'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fairds-sds, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fairds-sds'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/61, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/61'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is fc-service, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fc-service'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fc-service, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fc-service'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/62, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/62'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is fdo-manager, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdo-manager'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fdo-manager, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdo-manager'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/63, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/63'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is FDOM, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FDOM'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fdom, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/64, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/64'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is fdom-playground, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdom-playground'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fdom-playground, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom-playground'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/65, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/65'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is fdomAPI, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdomAPI'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fdomapi, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdomapi'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/66, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/66'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is sd-signer, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'sd-signer'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/sd-signer, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/sd-signer'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/67, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/67'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is Adaptive Digital Library, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'Adaptive Digital Library'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/68, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/68'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is automatic-diagnosis-from-clinical-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/69, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/69'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is SAT Solver, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'SAT Solver'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/70, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/70'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is author-name-disambiguation-using-mcmc, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'author-name-disambiguation-using-mcmc'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/71, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/71'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is entiy-recognition-and-linkage-for-reference-data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'entiy-recognition-and-linkage-for-reference-data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/72, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/72'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Social Media Sentiments Analysis Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Social Media Sentiments Analysis Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/31, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/31'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is PII | External Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'PII | External Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/32, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/32'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is IMDB Movie Dataset Till Dec-2023, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'IMDB Movie Dataset Till Dec-2023'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/33, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/33'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is LLM: Mistral-7B Instruct texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'LLM: Mistral-7B Instruct texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/34, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/34'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Fake News Detection, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Fake News Detection'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/35, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/35'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Glassdoor Data science Jobs - 2024, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Glassdoor Data science Jobs - 2024'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/36, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/36'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Grocery Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Grocery Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/37, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/37'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Mental Health Insights: Vulnerable Cancer Patients, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Mental Health Insights: Vulnerable Cancer Patients'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/38, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/38'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Brand Sentiment Analysis Dataset (Twitter), with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Brand Sentiment Analysis Dataset (Twitter)'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/39, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/39'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Books Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Books Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/books-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/books-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/40, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/40'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is AI Vs Human Text, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'AI Vs Human Text'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/41, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/41'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is YouTube Trending Videos Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'YouTube Trending Videos Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/42, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/42'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is Author Name Disambiguation, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Author Name Disambiguation'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/76, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/76'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is Technology Radar, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Technology Radar'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://fdda1.gitlab.io/technology-radar/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/technology-radar/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/77, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/77'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is FDO Manager, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Manager'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://193.175.161.105:8000/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8000/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/78, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/78'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is FDO Playground, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Playground'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://193.175.161.105:8080/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8080/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/79, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/79'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is SAT Solver, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'SAT Solver'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://116.203.68.5:5002/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://116.203.68.5:5002/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/80, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/80'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is Metadata Extraction, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Metadata Extraction'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://193.175.161.122:8080/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.122:8080/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/81, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/81'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is Chatbot-inference, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Chatbot-inference'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://129.26.160.216:7860/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://129.26.160.216:7860/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/82, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/82'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is automatic-diagnosis-from-clinical-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/83, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/83'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is FDO documentation in Gitlab, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO documentation in Gitlab'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://fdda1.gitlab.io/fdom, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/fdom'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/84, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/84'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is PADME Central Service, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Central Service'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://requester.padme-analytics.de/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://requester.padme-analytics.de/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/85, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/85'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is PADME Storehouse Platform, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Storehouse Platform'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://storehouse.padme-analytics.de/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://storehouse.padme-analytics.de/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/86, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/86'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is PADME Train Creation Wizard, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Train Creation Wizard'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://creator.padme-analytics.de/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://creator.padme-analytics.de/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/87, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/87'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 1, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'1'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 2, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'2'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 3, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'3'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 4, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'4'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 5, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'5'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 6, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'6'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 7, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'7'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 8, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'8'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 9, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'9'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 10, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'10'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 11, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'11'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which id is 12, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'12'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 61, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'61'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 62, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'62'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 63, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'63'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 64, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'64'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 65, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'65'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 66, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'66'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 67, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'67'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 68, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'68'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 69, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'69'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 70, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'70'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 71, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'71'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which id is 72, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'72'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 31, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'31'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 32, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'32'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 33, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'33'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 34, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'34'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 35, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'35'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 36, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'36'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 37, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'37'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 38, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'38'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 39, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'39'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 40, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'40'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 41, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'41'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which id is 42, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'42'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 76, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'76'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 77, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'77'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 78, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'78'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 79, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'79'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 80, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'80'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 81, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'81'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 82, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'82'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 83, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'83'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 84, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'84'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 85, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'85'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 86, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'86'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which id is 87, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'87'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/9651740, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/9651740'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/1, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/1'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/7532555, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/7532555'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/2, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/2'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791194, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791194'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/3, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/3'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791225, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791225'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/4, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/4'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/5, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/5'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Whois? Deep Author Name Disambiguation Using Bibliographic Data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Whois? Deep Author Name Disambiguation Using Bibliographic Data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/6, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/6'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is COIN: Counterfactual Image Generation for VQA Interpretation, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'COIN: Counterfactual Image Generation for VQA Interpretation'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://arxiv.org/abs/2201.03342, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2201.03342'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/7, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/7'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://arxiv.org/abs/2107.04382, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2107.04382'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/8, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/8'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://link.springer.com/article/10.1007/s11263-023-01926-3, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/article/10.1007/s11263-023-01926-3'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/9, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/9'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://arxiv.org/abs/2202.08967, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2202.08967'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/10, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/10'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/11, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/11'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which url is https://arxiv.org/abs/2103.06727, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2103.06727'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which creativeWorkType is article, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Article for which metadata_url is http://193.175.161.176:5000/publication/12, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/12'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is FAIRDS-SDs, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FAIRDS-SDs'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fairds-sds, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fairds-sds'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/61, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/61'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is fc-service, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fc-service'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fc-service, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fc-service'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/62, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/62'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is fdo-manager, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdo-manager'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fdo-manager, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdo-manager'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/63, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/63'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is FDOM, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FDOM'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fdom, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/64, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/64'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is fdom-playground, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdom-playground'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fdom-playground, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom-playground'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/65, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/65'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is fdomAPI, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdomAPI'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/fdomapi, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdomapi'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/66, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/66'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is sd-signer, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'sd-signer'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.com/fdda1/sd-signer, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/sd-signer'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/67, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/67'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is Adaptive Digital Library, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'Adaptive Digital Library'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/68, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/68'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is automatic-diagnosis-from-clinical-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/69, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/69'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is SAT Solver, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'SAT Solver'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/70, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/70'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is author-name-disambiguation-using-mcmc, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'author-name-disambiguation-using-mcmc'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/71, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/71'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which name is entiy-recognition-and-linkage-for-reference-data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'entiy-recognition-and-linkage-for-reference-data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Code for which metadata_url is http://193.175.161.176:5000/code/72, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/72'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Social Media Sentiments Analysis Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Social Media Sentiments Analysis Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/31, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/31'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is PII | External Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'PII | External Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/32, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/32'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is IMDB Movie Dataset Till Dec-2023, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'IMDB Movie Dataset Till Dec-2023'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/33, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/33'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is LLM: Mistral-7B Instruct texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'LLM: Mistral-7B Instruct texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/34, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/34'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Fake News Detection, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Fake News Detection'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/35, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/35'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Glassdoor Data science Jobs - 2024, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Glassdoor Data science Jobs - 2024'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/36, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/36'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Grocery Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Grocery Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/37, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/37'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Mental Health Insights: Vulnerable Cancer Patients, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Mental Health Insights: Vulnerable Cancer Patients'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/38, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/38'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Brand Sentiment Analysis Dataset (Twitter), with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Brand Sentiment Analysis Dataset (Twitter)'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/39, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/39'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is Books Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Books Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/books-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/books-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/40, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/40'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is AI Vs Human Text, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'AI Vs Human Text'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/41, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/41'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which name is YouTube Trending Videos Dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'YouTube Trending Videos Dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which creativeWorkType is dataset, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/42, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/42'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is Author Name Disambiguation, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Author Name Disambiguation'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/76, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/76'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is Technology Radar, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Technology Radar'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://fdda1.gitlab.io/technology-radar/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/technology-radar/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/77, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/77'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is FDO Manager, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Manager'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://193.175.161.105:8000/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8000/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/78, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/78'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is FDO Playground, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Playground'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://193.175.161.105:8080/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8080/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/79, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/79'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is SAT Solver, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'SAT Solver'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://116.203.68.5:5002/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://116.203.68.5:5002/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/80, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/80'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is Metadata Extraction, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Metadata Extraction'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://193.175.161.122:8080/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.122:8080/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/81, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/81'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is Chatbot-inference, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Chatbot-inference'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://129.26.160.216:7860/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://129.26.160.216:7860/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/82, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/82'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is automatic-diagnosis-from-clinical-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/83, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/83'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is FDO documentation in Gitlab, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO documentation in Gitlab'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://fdda1.gitlab.io/fdom, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/fdom'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/84, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/84'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is PADME Central Service, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Central Service'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://requester.padme-analytics.de/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://requester.padme-analytics.de/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/85, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/85'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is PADME Storehouse Platform, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Storehouse Platform'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is https://storehouse.padme-analytics.de/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://storehouse.padme-analytics.de/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/86, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/86'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which name is PADME Train Creation Wizard, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Train Creation Wizard'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which url is http://creator.padme-analytics.de/, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://creator.padme-analytics.de/'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which creativeWorkType is code, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the nodes that are connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/87, with their relationship types and count these types!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/87'})-[r]->(n) RETURN n, TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 1!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'1'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 2!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'2'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'3'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 4!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'4'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 5!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'5'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 6!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'6'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 7!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'7'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 8!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'8'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 9!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'9'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 10!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'10'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 11!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'11'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which id is 12!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'12'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 61!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'61'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 62!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'62'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 63!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'63'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 64!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'64'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 65!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'65'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 66!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'66'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 67!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'67'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 68!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'68'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 69!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'69'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 70!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'70'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 71!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'71'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which id is 72!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'72'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 31!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'31'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 32!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'32'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 33!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'33'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 34!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'34'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 35!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'35'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 36!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'36'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 37!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'37'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 38!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'38'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 39!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'39'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 40!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'40'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 41!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'41'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which id is 42!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'42'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 76!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'76'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 77!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'77'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 78!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'78'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 79!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'79'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 80!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'80'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 81!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'81'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 82!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'82'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 83!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'83'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 84!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'84'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 85!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'85'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 86!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'86'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which id is 87!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'87'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/9651740!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/9651740'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/1!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/1'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/7532555!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/7532555'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/2!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/2'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791194!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791194'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/3'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791225!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791225'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/4!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/4'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/5!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/5'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is Whois? Deep Author Name Disambiguation Using Bibliographic Data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Whois? Deep Author Name Disambiguation Using Bibliographic Data'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/6!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/6'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is COIN: Counterfactual Image Generation for VQA Interpretation!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'COIN: Counterfactual Image Generation for VQA Interpretation'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://arxiv.org/abs/2201.03342!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2201.03342'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/7!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/7'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://arxiv.org/abs/2107.04382!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2107.04382'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/8!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/8'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://link.springer.com/article/10.1007/s11263-023-01926-3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/article/10.1007/s11263-023-01926-3'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/9!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/9'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://arxiv.org/abs/2202.08967!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2202.08967'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/10!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/10'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/11!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/11'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which url is https://arxiv.org/abs/2103.06727!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2103.06727'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which creativeWorkType is article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Article for which metadata_url is http://193.175.161.176:5000/publication/12!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/12'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is FAIRDS-SDs!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FAIRDS-SDs'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.com/fdda1/fairds-sds!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fairds-sds'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/61!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/61'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is fc-service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fc-service'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.com/fdda1/fc-service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fc-service'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/62!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/62'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is fdo-manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdo-manager'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.com/fdda1/fdo-manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdo-manager'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/63!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/63'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is FDOM!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FDOM'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.com/fdda1/fdom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/64!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/64'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is fdom-playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdom-playground'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.com/fdda1/fdom-playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom-playground'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/65!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/65'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is fdomAPI!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdomAPI'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.com/fdda1/fdomapi!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdomapi'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/66!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/66'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is sd-signer!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'sd-signer'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.com/fdda1/sd-signer!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/sd-signer'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/67!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/67'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is Adaptive Digital Library!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'Adaptive Digital Library'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/68!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/68'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'automatic-diagnosis-from-clinical-texts'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/69!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/69'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is SAT Solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'SAT Solver'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/70!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/70'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'author-name-disambiguation-using-mcmc'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/71!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/71'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which name is entiy-recognition-and-linkage-for-reference-data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'entiy-recognition-and-linkage-for-reference-data'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Code for which metadata_url is http://193.175.161.176:5000/code/72!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/72'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is Social Media Sentiments Analysis Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Social Media Sentiments Analysis Dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/31!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/31'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is PII | External Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'PII | External Dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/32!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/32'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is IMDB Movie Dataset Till Dec-2023!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'IMDB Movie Dataset Till Dec-2023'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/33!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/33'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is LLM: Mistral-7B Instruct texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'LLM: Mistral-7B Instruct texts'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/34!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/34'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is Fake News Detection!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Fake News Detection'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/35!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/35'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is Glassdoor Data science Jobs - 2024!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Glassdoor Data science Jobs - 2024'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/36!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/36'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is Grocery Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Grocery Dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/37!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/37'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is Mental Health Insights: Vulnerable Cancer Patients!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Mental Health Insights: Vulnerable Cancer Patients'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/38!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/38'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is Brand Sentiment Analysis Dataset (Twitter)!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Brand Sentiment Analysis Dataset (Twitter)'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/39!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/39'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is Books Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Books Dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/books-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/books-dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/40!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/40'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is AI Vs Human Text!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'AI Vs Human Text'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/41!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/41'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which name is YouTube Trending Videos Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'YouTube Trending Videos Dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which creativeWorkType is dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/42!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/42'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is Author Name Disambiguation!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Author Name Disambiguation'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/76!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/76'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is Technology Radar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Technology Radar'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is https://fdda1.gitlab.io/technology-radar/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/technology-radar/'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/77!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/77'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is FDO Manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Manager'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is http://193.175.161.105:8000/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8000/'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/78!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/78'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is FDO Playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Playground'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is http://193.175.161.105:8080/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8080/'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/79!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/79'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is SAT Solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'SAT Solver'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is http://116.203.68.5:5002/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://116.203.68.5:5002/'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/80!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/80'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is Metadata Extraction!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Metadata Extraction'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is http://193.175.161.122:8080/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.122:8080/'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/81!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/81'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is Chatbot-inference!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Chatbot-inference'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is http://129.26.160.216:7860/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://129.26.160.216:7860/'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/82!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/82'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'automatic-diagnosis-from-clinical-texts'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/83!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/83'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is FDO documentation in Gitlab!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO documentation in Gitlab'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is https://fdda1.gitlab.io/fdom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/fdom'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/84!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/84'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is PADME Central Service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Central Service'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is https://requester.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://requester.padme-analytics.de/'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/85!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/85'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is PADME Storehouse Platform!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Storehouse Platform'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is https://storehouse.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://storehouse.padme-analytics.de/'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/86!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/86'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which name is PADME Train Creation Wizard!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Train Creation Wizard'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which url is http://creator.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://creator.padme-analytics.de/'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which creativeWorkType is code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "List the types of relationships and their counts connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/87!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/87'})-[r]->() RETURN TYPE(r) AS Relations, COUNT(r) AS Counts"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 1!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'1'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 2!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'2'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'3'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 4!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'4'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 5!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'5'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 6!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'6'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 7!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'7'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 8!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'8'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 9!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'9'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 10!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'10'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 11!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'11'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has id 12!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH path=(:Article {id:'12'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 61!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'61'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 62!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'62'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 63!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'63'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 64!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'64'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 65!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'65'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 66!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'66'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 67!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'67'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 68!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'68'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 69!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'69'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 70!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'70'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 71!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'71'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has id 72!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH path=(:Code {id:'72'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 31!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'31'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 32!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'32'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 33!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'33'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 34!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'34'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 35!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'35'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 36!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'36'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 37!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'37'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 38!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'38'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 39!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'39'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 40!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'40'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 41!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'41'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has id 42!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH path=(:Dataset {id:'42'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 76!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'76'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 77!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'77'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 78!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'78'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 79!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'79'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 80!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'80'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 81!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'81'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 82!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'82'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 83!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'83'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 84!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'84'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 85!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'85'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 86!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'86'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has id 87!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH path=(:SoftwareApplication {id:'87'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name MexPub: Deep Transfer Learning for Metadata Extraction from German Publications!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://ieeexplore.ieee.org/abstract/document/9651740!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://ieeexplore.ieee.org/abstract/document/9651740'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/1!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/1'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name Automatic recognition of movement patterns in the vojta-therapy using RGB-D data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://ieeexplore.ieee.org/abstract/document/7532555!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://ieeexplore.ieee.org/abstract/document/7532555'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/2!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/2'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://ieeexplore.ieee.org/abstract/document/8791194!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://ieeexplore.ieee.org/abstract/document/8791194'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/3'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://ieeexplore.ieee.org/abstract/document/8791225!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://ieeexplore.ieee.org/abstract/document/8791225'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/4!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/4'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/5!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/5'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name Whois? Deep Author Name Disambiguation Using Bibliographic Data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'Whois? Deep Author Name Disambiguation Using Bibliographic Data'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/6!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/6'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name COIN: Counterfactual Image Generation for VQA Interpretation!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'COIN: Counterfactual Image Generation for VQA Interpretation'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://arxiv.org/abs/2201.03342!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://arxiv.org/abs/2201.03342'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/7!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/7'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://arxiv.org/abs/2107.04382!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://arxiv.org/abs/2107.04382'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/8!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/8'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://link.springer.com/article/10.1007/s11263-023-01926-3!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://link.springer.com/article/10.1007/s11263-023-01926-3'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/9!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/9'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://arxiv.org/abs/2202.08967!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://arxiv.org/abs/2202.08967'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/10!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/10'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/11!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/11'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has name Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH path=(:Article {name:'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has url https://arxiv.org/abs/2103.06727!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH path=(:Article {url:'https://arxiv.org/abs/2103.06727'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has creativeWorkType article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Article {creativeWorkType:'article'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Article that has metadata_url http://193.175.161.176:5000/publication/12!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH path=(:Article {metadata_url:'http://193.175.161.176:5000/publication/12'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name FAIRDS-SDs!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'FAIRDS-SDs'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.com/fdda1/fairds-sds!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.com/fdda1/fairds-sds'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/61!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/61'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name fc-service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'fc-service'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.com/fdda1/fc-service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.com/fdda1/fc-service'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/62!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/62'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name fdo-manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'fdo-manager'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.com/fdda1/fdo-manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.com/fdda1/fdo-manager'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/63!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/63'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name FDOM!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'FDOM'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.com/fdda1/fdom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.com/fdda1/fdom'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/64!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/64'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name fdom-playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'fdom-playground'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.com/fdda1/fdom-playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.com/fdda1/fdom-playground'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/65!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/65'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name fdomAPI!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'fdomAPI'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.com/fdda1/fdomapi!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.com/fdda1/fdomapi'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/66!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/66'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name sd-signer!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'sd-signer'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.com/fdda1/sd-signer!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.com/fdda1/sd-signer'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/67!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/67'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name Adaptive Digital Library!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'Adaptive Digital Library'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/68!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/68'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'automatic-diagnosis-from-clinical-texts'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/69!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/69'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name SAT Solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'SAT Solver'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/70!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/70'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'author-name-disambiguation-using-mcmc'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/71!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/71'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has name entiy-recognition-and-linkage-for-reference-data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH path=(:Code {name:'entiy-recognition-and-linkage-for-reference-data'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has url https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH path=(:Code {url:'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Code {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Code that has metadata_url http://193.175.161.176:5000/code/72!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH path=(:Code {metadata_url:'http://193.175.161.176:5000/code/72'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name Social Media Sentiments Analysis Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'Social Media Sentiments Analysis Dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/31!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/31'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name PII | External Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'PII | External Dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/32!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/32'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name IMDB Movie Dataset Till Dec-2023!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'IMDB Movie Dataset Till Dec-2023'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/33!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/33'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name LLM: Mistral-7B Instruct texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'LLM: Mistral-7B Instruct texts'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/34!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/34'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name Fake News Detection!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'Fake News Detection'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/35!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/35'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name Glassdoor Data science Jobs - 2024!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'Glassdoor Data science Jobs - 2024'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/36!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/36'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name Grocery Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'Grocery Dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/elvinrustam/grocery-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/37!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/37'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name Mental Health Insights: Vulnerable Cancer Patients!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'Mental Health Insights: Vulnerable Cancer Patients'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/38!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/38'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name Brand Sentiment Analysis Dataset (Twitter)!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'Brand Sentiment Analysis Dataset (Twitter)'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/39!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/39'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name Books Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'Books Dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/elvinrustam/books-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/elvinrustam/books-dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/40!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/40'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name AI Vs Human Text!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'AI Vs Human Text'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/41!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/41'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has name YouTube Trending Videos Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH path=(:Dataset {name:'YouTube Trending Videos Dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has url https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH path=(:Dataset {url:'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has creativeWorkType dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH path=(:Dataset {creativeWorkType:'dataset'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the Dataset that has metadata_url http://193.175.161.176:5000/dataset/42!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH path=(:Dataset {metadata_url:'http://193.175.161.176:5000/dataset/42'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name Author Name Disambiguation!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'Author Name Disambiguation'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/76!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/76'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name Technology Radar!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'Technology Radar'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url https://fdda1.gitlab.io/technology-radar/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'https://fdda1.gitlab.io/technology-radar/'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/77!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/77'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name FDO Manager!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'FDO Manager'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url http://193.175.161.105:8000/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'http://193.175.161.105:8000/'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/78!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/78'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name FDO Playground!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'FDO Playground'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url http://193.175.161.105:8080/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'http://193.175.161.105:8080/'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/79!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/79'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name SAT Solver!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'SAT Solver'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url http://116.203.68.5:5002/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'http://116.203.68.5:5002/'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/80!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/80'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name Metadata Extraction!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'Metadata Extraction'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url http://193.175.161.122:8080/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'http://193.175.161.122:8080/'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/81!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/81'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name Chatbot-inference!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'Chatbot-inference'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url http://129.26.160.216:7860/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'http://129.26.160.216:7860/'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/82!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/82'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'automatic-diagnosis-from-clinical-texts'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/83!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/83'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name FDO documentation in Gitlab!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'FDO documentation in Gitlab'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url https://fdda1.gitlab.io/fdom!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'https://fdda1.gitlab.io/fdom'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/84!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/84'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name PADME Central Service!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'PADME Central Service'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url https://requester.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'https://requester.padme-analytics.de/'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/85!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/85'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name PADME Storehouse Platform!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'PADME Storehouse Platform'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url https://storehouse.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'https://storehouse.padme-analytics.de/'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/86!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/86'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has name PADME Train Creation Wizard!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {name:'PADME Train Creation Wizard'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has url http://creator.padme-analytics.de/!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {url:'http://creator.padme-analytics.de/'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has creativeWorkType code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {creativeWorkType:'code'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find all nodes directly connected to the SoftwareApplication that has metadata_url http://193.175.161.176:5000/webapplication/87!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH path=(:SoftwareApplication {metadata_url:'http://193.175.161.176:5000/webapplication/87'})-->() RETURN path"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 1 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'1'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 2 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'2'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 3 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'3'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 4 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'4'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 5 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'5'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 6 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'6'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 7 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'7'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 8 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'8'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 9 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'9'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 10 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'10'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 11 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'11'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where id is 12 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (a:Article{id:'12'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 61 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'61'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 62 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'62'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 63 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'63'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 64 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'64'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 65 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'65'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 66 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'66'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 67 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'67'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 68 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'68'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 69 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'69'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 70 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'70'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 71 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'71'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where id is 72 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (a:Code{id:'72'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 31 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'31'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 32 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'32'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 33 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'33'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 34 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'34'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 35 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'35'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 36 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'36'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 37 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'37'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 38 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'38'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 39 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'39'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 40 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'40'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 41 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'41'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where id is 42 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (a:Dataset{id:'42'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 76 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'76'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 77 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'77'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 78 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'78'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 79 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'79'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 80 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'80'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 81 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'81'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 82 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'82'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 83 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'83'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 84 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'84'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 85 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'85'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 86 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'86'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where id is 87 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (a:SoftwareApplication{id:'87'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://ieeexplore.ieee.org/abstract/document/9651740 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/9651740'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/1 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/1'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://ieeexplore.ieee.org/abstract/document/7532555 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/7532555'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/2 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/2'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://ieeexplore.ieee.org/abstract/document/8791194 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791194'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/3 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/3'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://ieeexplore.ieee.org/abstract/document/8791225 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791225'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/4 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/4'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/5 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/5'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is Whois? Deep Author Name Disambiguation Using Bibliographic Data and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Whois? Deep Author Name Disambiguation Using Bibliographic Data'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/6 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/6'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is COIN: Counterfactual Image Generation for VQA Interpretation and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'COIN: Counterfactual Image Generation for VQA Interpretation'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://arxiv.org/abs/2201.03342 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2201.03342'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/7 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/7'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://arxiv.org/abs/2107.04382 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2107.04382'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/8 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/8'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://link.springer.com/article/10.1007/s11263-023-01926-3 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/article/10.1007/s11263-023-01926-3'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/9 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/9'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://arxiv.org/abs/2202.08967 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2202.08967'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/10 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/10'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/11 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/11'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (a:Article{name:'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where url is https://arxiv.org/abs/2103.06727 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (a:Article{url:'https://arxiv.org/abs/2103.06727'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where creativeWorkType is article and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (a:Article{creativeWorkType:'article'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Article where metadata_url is http://193.175.161.176:5000/publication/12 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/12'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is FAIRDS-SDs and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FAIRDS-SDs'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.com/fdda1/fairds-sds and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fairds-sds'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/61 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/61'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is fc-service and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fc-service'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.com/fdda1/fc-service and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fc-service'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/62 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/62'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is fdo-manager and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdo-manager'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.com/fdda1/fdo-manager and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdo-manager'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/63 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/63'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is FDOM and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'FDOM'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.com/fdda1/fdom and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/64 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/64'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is fdom-playground and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdom-playground'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.com/fdda1/fdom-playground and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom-playground'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/65 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/65'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is fdomAPI and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'fdomAPI'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.com/fdda1/fdomapi and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/fdomapi'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/66 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/66'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is sd-signer and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'sd-signer'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.com/fdda1/sd-signer and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.com/fdda1/sd-signer'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/67 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/67'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is Adaptive Digital Library and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'Adaptive Digital Library'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/68 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/68'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is automatic-diagnosis-from-clinical-texts and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/69 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/69'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is SAT Solver and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'SAT Solver'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/70 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/70'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is author-name-disambiguation-using-mcmc and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'author-name-disambiguation-using-mcmc'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/71 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/71'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where name is entiy-recognition-and-linkage-for-reference-data and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (a:Code{name:'entiy-recognition-and-linkage-for-reference-data'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (a:Code{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Code where metadata_url is http://193.175.161.176:5000/code/72 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/72'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is Social Media Sentiments Analysis Dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Social Media Sentiments Analysis Dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/31 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/31'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is PII | External Dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'PII | External Dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/32 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/32'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is IMDB Movie Dataset Till Dec-2023 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'IMDB Movie Dataset Till Dec-2023'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/33 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/33'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is LLM: Mistral-7B Instruct texts and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'LLM: Mistral-7B Instruct texts'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/34 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/34'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is Fake News Detection and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Fake News Detection'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/35 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/35'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is Glassdoor Data science Jobs - 2024 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Glassdoor Data science Jobs - 2024'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/36 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/36'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is Grocery Dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Grocery Dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/37 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/37'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is Mental Health Insights: Vulnerable Cancer Patients and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Mental Health Insights: Vulnerable Cancer Patients'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/38 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/38'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is Brand Sentiment Analysis Dataset (Twitter) and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Brand Sentiment Analysis Dataset (Twitter)'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/39 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/39'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is Books Dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'Books Dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/elvinrustam/books-dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/books-dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/40 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/40'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is AI Vs Human Text and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'AI Vs Human Text'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/41 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/41'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where name is YouTube Trending Videos Dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (a:Dataset{name:'YouTube Trending Videos Dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where creativeWorkType is dataset and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/42 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/42'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is Author Name Disambiguation and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Author Name Disambiguation'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/76 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/76'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is Technology Radar and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Technology Radar'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is https://fdda1.gitlab.io/technology-radar/ and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/technology-radar/'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/77 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/77'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is FDO Manager and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Manager'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is http://193.175.161.105:8000/ and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8000/'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/78 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/78'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is FDO Playground and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO Playground'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is http://193.175.161.105:8080/ and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.105:8080/'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/79 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/79'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is SAT Solver and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'SAT Solver'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is http://116.203.68.5:5002/ and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://116.203.68.5:5002/'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/80 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/80'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is Metadata Extraction and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Metadata Extraction'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is http://193.175.161.122:8080/ and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://193.175.161.122:8080/'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/81 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/81'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is Chatbot-inference and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'Chatbot-inference'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is http://129.26.160.216:7860/ and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://129.26.160.216:7860/'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/82 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/82'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is automatic-diagnosis-from-clinical-texts and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/83 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/83'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is FDO documentation in Gitlab and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'FDO documentation in Gitlab'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is https://fdda1.gitlab.io/fdom and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://fdda1.gitlab.io/fdom'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/84 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/84'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is PADME Central Service and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Central Service'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is https://requester.padme-analytics.de/ and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://requester.padme-analytics.de/'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/85 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/85'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is PADME Storehouse Platform and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Storehouse Platform'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is https://storehouse.padme-analytics.de/ and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'https://storehouse.padme-analytics.de/'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/86 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/86'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where name is PADME Train Creation Wizard and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (a:SoftwareApplication{name:'PADME Train Creation Wizard'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where url is http://creator.padme-analytics.de/ and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{url:'http://creator.padme-analytics.de/'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where creativeWorkType is code and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (a:SoftwareApplication{creativeWorkType:'code'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Find the nodes connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/87 and list their properties!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (a:SoftwareApplication{metadata_url:'http://193.175.161.176:5000/webapplication/87'})-[r]->(n) RETURN properties(n), r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 1 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '1' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 2 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '2' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 3 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '3' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 4 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '4' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 5 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '5' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 6 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '6' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 7 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '7' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 8 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '8' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 9 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '9' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 10 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '10' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 11 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '11' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where id is 12 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.id = '12' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 61 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '61' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 62 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '62' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 63 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '63' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 64 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '64' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 65 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '65' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 66 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '66' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 67 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '67' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 68 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '68' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 69 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '69' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 70 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '70' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 71 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '71' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where id is 72 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.id = '72' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 31 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '31' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 32 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '32' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 33 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '33' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 34 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '34' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 35 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '35' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 36 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '36' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 37 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '37' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 38 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '38' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 39 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '39' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 40 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '40' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 41 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '41' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where id is 42 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.id = '42' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 76 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '76' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 77 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '77' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 78 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '78' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 79 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '79' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 80 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '80' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 81 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '81' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 82 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '82' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 83 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '83' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 84 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '84' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 85 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '85' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 86 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '86' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where id is 87 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.id = '87' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://ieeexplore.ieee.org/abstract/document/9651740 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://ieeexplore.ieee.org/abstract/document/9651740' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/1 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/1' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://ieeexplore.ieee.org/abstract/document/7532555 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://ieeexplore.ieee.org/abstract/document/7532555' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/2 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/2' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://ieeexplore.ieee.org/abstract/document/8791194 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://ieeexplore.ieee.org/abstract/document/8791194' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/3 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/3' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://ieeexplore.ieee.org/abstract/document/8791225 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://ieeexplore.ieee.org/abstract/document/8791225' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/4 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/4' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/5 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/5' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is Whois? Deep Author Name Disambiguation Using Bibliographic Data and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'Whois? Deep Author Name Disambiguation Using Bibliographic Data' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/6 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/6' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is COIN: Counterfactual Image Generation for VQA Interpretation and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'COIN: Counterfactual Image Generation for VQA Interpretation' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://arxiv.org/abs/2201.03342 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://arxiv.org/abs/2201.03342' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/7 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/7' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://arxiv.org/abs/2107.04382 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://arxiv.org/abs/2107.04382' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/8 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/8' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://link.springer.com/article/10.1007/s11263-023-01926-3 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://link.springer.com/article/10.1007/s11263-023-01926-3' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/9 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/9' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://arxiv.org/abs/2202.08967 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://arxiv.org/abs/2202.08967' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/10 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/10' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/11 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/11' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.name = 'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where url is https://arxiv.org/abs/2103.06727 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.url = 'https://arxiv.org/abs/2103.06727' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where creativeWorkType is article and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.creativeWorkType = 'article' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Article where metadata_url is http://193.175.161.176:5000/publication/12 and list their properties, including those of Article!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": " MATCH (b:Article)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/publication/12' RETURN properties(b) AS Article_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is FAIRDS-SDs and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'FAIRDS-SDs' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.com/fdda1/fairds-sds and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.com/fdda1/fairds-sds' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/61 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/61' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is fc-service and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'fc-service' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.com/fdda1/fc-service and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.com/fdda1/fc-service' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/62 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/62' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is fdo-manager and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'fdo-manager' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.com/fdda1/fdo-manager and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.com/fdda1/fdo-manager' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/63 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/63' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is FDOM and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'FDOM' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.com/fdda1/fdom and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.com/fdda1/fdom' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/64 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/64' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is fdom-playground and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'fdom-playground' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.com/fdda1/fdom-playground and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.com/fdda1/fdom-playground' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/65 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/65' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is fdomAPI and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'fdomAPI' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.com/fdda1/fdomapi and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.com/fdda1/fdomapi' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/66 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/66' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is sd-signer and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'sd-signer' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.com/fdda1/sd-signer and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.com/fdda1/sd-signer' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/67 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/67' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is Adaptive Digital Library and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'Adaptive Digital Library' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/68 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/68' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is automatic-diagnosis-from-clinical-texts and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'automatic-diagnosis-from-clinical-texts' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/69 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/69' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is SAT Solver and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'SAT Solver' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/70 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/70' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is author-name-disambiguation-using-mcmc and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'author-name-disambiguation-using-mcmc' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/71 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/71' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where name is entiy-recognition-and-linkage-for-reference-data and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.name = 'entiy-recognition-and-linkage-for-reference-data' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.url = 'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where creativeWorkType is code and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Code where metadata_url is http://193.175.161.176:5000/code/72 and list their properties, including those of Code!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": " MATCH (b:Code)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/code/72' RETURN properties(b) AS Code_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is Social Media Sentiments Analysis Dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'Social Media Sentiments Analysis Dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/31 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/31' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is PII | External Dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'PII | External Dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/32 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/32' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is IMDB Movie Dataset Till Dec-2023 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'IMDB Movie Dataset Till Dec-2023' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/33 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/33' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is LLM: Mistral-7B Instruct texts and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'LLM: Mistral-7B Instruct texts' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/34 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/34' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is Fake News Detection and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'Fake News Detection' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/35 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/35' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is Glassdoor Data science Jobs - 2024 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'Glassdoor Data science Jobs - 2024' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/36 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/36' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is Grocery Dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'Grocery Dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/37 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/37' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is Mental Health Insights: Vulnerable Cancer Patients and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'Mental Health Insights: Vulnerable Cancer Patients' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/38 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/38' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is Brand Sentiment Analysis Dataset (Twitter) and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'Brand Sentiment Analysis Dataset (Twitter)' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/39 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/39' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is Books Dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'Books Dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/elvinrustam/books-dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/elvinrustam/books-dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/40 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/40' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is AI Vs Human Text and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'AI Vs Human Text' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/41 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/41' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where name is YouTube Trending Videos Dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.name = 'YouTube Trending Videos Dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.url = 'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where creativeWorkType is dataset and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.creativeWorkType = 'dataset' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/42 and list their properties, including those of Dataset!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": " MATCH (b:Dataset)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/dataset/42' RETURN properties(b) AS Dataset_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is Author Name Disambiguation and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'Author Name Disambiguation' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/76 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/76' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is Technology Radar and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'Technology Radar' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is https://fdda1.gitlab.io/technology-radar/ and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'https://fdda1.gitlab.io/technology-radar/' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/77 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/77' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is FDO Manager and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'FDO Manager' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is http://193.175.161.105:8000/ and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'http://193.175.161.105:8000/' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/78 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/78' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is FDO Playground and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'FDO Playground' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is http://193.175.161.105:8080/ and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'http://193.175.161.105:8080/' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/79 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/79' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is SAT Solver and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'SAT Solver' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is http://116.203.68.5:5002/ and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'http://116.203.68.5:5002/' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/80 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/80' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is Metadata Extraction and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'Metadata Extraction' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is http://193.175.161.122:8080/ and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'http://193.175.161.122:8080/' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/81 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/81' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is Chatbot-inference and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'Chatbot-inference' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is http://129.26.160.216:7860/ and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'http://129.26.160.216:7860/' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/82 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/82' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is automatic-diagnosis-from-clinical-texts and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'automatic-diagnosis-from-clinical-texts' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/83 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/83' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is FDO documentation in Gitlab and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'FDO documentation in Gitlab' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is https://fdda1.gitlab.io/fdom and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'https://fdda1.gitlab.io/fdom' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/84 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/84' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is PADME Central Service and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'PADME Central Service' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is https://requester.padme-analytics.de/ and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'https://requester.padme-analytics.de/' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/85 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/85' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is PADME Storehouse Platform and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'PADME Storehouse Platform' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is https://storehouse.padme-analytics.de/ and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'https://storehouse.padme-analytics.de/' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/86 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/86' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where name is PADME Train Creation Wizard and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.name = 'PADME Train Creation Wizard' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where url is http://creator.padme-analytics.de/ and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.url = 'http://creator.padme-analytics.de/' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where creativeWorkType is code and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.creativeWorkType = 'code' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Identify nodes that are connected to SoftwareApplication where metadata_url is http://193.175.161.176:5000/webapplication/87 and list their properties, including those of SoftwareApplication!", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": " MATCH (b:SoftwareApplication)-[r]->(n) WHERE b.metadata_url = 'http://193.175.161.176:5000/webapplication/87' RETURN properties(b) AS SoftwareApplication_props, properties(n) AS props"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 1, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '1' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 2, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '2' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 3, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '3' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 4, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '4' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 5, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '5' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 6, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '6' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 7, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '7' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 8, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '8' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 9, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '9' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 10, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '10' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 11, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '11' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which id is 12, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.id = '12' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 61, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '61' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 62, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '62' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 63, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '63' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 64, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '64' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 65, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '65' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 66, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '66' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 67, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '67' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 68, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '68' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 69, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '69' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 70, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '70' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 71, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '71' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which id is 72, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.id = '72' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 31, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '31' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 32, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '32' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 33, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '33' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 34, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '34' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 35, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '35' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 36, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '36' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 37, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '37' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 38, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '38' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 39, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '39' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 40, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '40' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 41, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '41' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which id is 42, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.id = '42' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 76, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '76' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 77, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '77' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 78, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '78' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 79, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '79' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 80, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '80' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 81, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '81' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 82, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '82' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 83, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '83' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 84, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '84' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 85, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '85' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 86, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '86' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which id is 87, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.id = '87' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/9651740, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://ieeexplore.ieee.org/abstract/document/9651740' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/1, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/1' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/7532555, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://ieeexplore.ieee.org/abstract/document/7532555' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/2, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/2' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791194, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://ieeexplore.ieee.org/abstract/document/8791194' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/3, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/3' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://ieeexplore.ieee.org/abstract/document/8791225, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://ieeexplore.ieee.org/abstract/document/8791225' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/4, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/4' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/5, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/5' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is Whois? Deep Author Name Disambiguation Using Bibliographic Data, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'Whois? Deep Author Name Disambiguation Using Bibliographic Data' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/6, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/6' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is COIN: Counterfactual Image Generation for VQA Interpretation, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'COIN: Counterfactual Image Generation for VQA Interpretation' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://arxiv.org/abs/2201.03342, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://arxiv.org/abs/2201.03342' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/7, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/7' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://arxiv.org/abs/2107.04382, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://arxiv.org/abs/2107.04382' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/8, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/8' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://link.springer.com/article/10.1007/s11263-023-01926-3, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://link.springer.com/article/10.1007/s11263-023-01926-3' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/9, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/9' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://arxiv.org/abs/2202.08967, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://arxiv.org/abs/2202.08967' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/10, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/10' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/11, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/11' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.name = 'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which url is https://arxiv.org/abs/2103.06727, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.url = 'https://arxiv.org/abs/2103.06727' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which creativeWorkType is article, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.creativeWorkType = 'article' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Article for which metadata_url is http://193.175.161.176:5000/publication/12, and what are their relationships to Article?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (c:Article)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/publication/12' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is FAIRDS-SDs, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'FAIRDS-SDs' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.com/fdda1/fairds-sds, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.com/fdda1/fairds-sds' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/61, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/61' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is fc-service, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'fc-service' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.com/fdda1/fc-service, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.com/fdda1/fc-service' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/62, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/62' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is fdo-manager, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'fdo-manager' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.com/fdda1/fdo-manager, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.com/fdda1/fdo-manager' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/63, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/63' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is FDOM, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'FDOM' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.com/fdda1/fdom, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.com/fdda1/fdom' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/64, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/64' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is fdom-playground, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'fdom-playground' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.com/fdda1/fdom-playground, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.com/fdda1/fdom-playground' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/65, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/65' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is fdomAPI, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'fdomAPI' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.com/fdda1/fdomapi, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.com/fdda1/fdomapi' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/66, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/66' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is sd-signer, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'sd-signer' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.com/fdda1/sd-signer, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.com/fdda1/sd-signer' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/67, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/67' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is Adaptive Digital Library, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'Adaptive Digital Library' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/68, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/68' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is automatic-diagnosis-from-clinical-texts, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'automatic-diagnosis-from-clinical-texts' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/69, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/69' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is SAT Solver, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'SAT Solver' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/70, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/70' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is author-name-disambiguation-using-mcmc, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'author-name-disambiguation-using-mcmc' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/71, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/71' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which name is entiy-recognition-and-linkage-for-reference-data, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.name = 'entiy-recognition-and-linkage-for-reference-data' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.url = 'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which creativeWorkType is code, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Code for which metadata_url is http://193.175.161.176:5000/code/72, and what are their relationships to Code?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (c:Code)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/code/72' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is Social Media Sentiments Analysis Dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'Social Media Sentiments Analysis Dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/31, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/31' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is PII | External Dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'PII | External Dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/32, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/32' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is IMDB Movie Dataset Till Dec-2023, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'IMDB Movie Dataset Till Dec-2023' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/33, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/33' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is LLM: Mistral-7B Instruct texts, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'LLM: Mistral-7B Instruct texts' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/34, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/34' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is Fake News Detection, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'Fake News Detection' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/35, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/35' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is Glassdoor Data science Jobs - 2024, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'Glassdoor Data science Jobs - 2024' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/36, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/36' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is Grocery Dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'Grocery Dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/37, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/37' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is Mental Health Insights: Vulnerable Cancer Patients, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'Mental Health Insights: Vulnerable Cancer Patients' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/38, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/38' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is Brand Sentiment Analysis Dataset (Twitter), and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'Brand Sentiment Analysis Dataset (Twitter)' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/39, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/39' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is Books Dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'Books Dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/elvinrustam/books-dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/elvinrustam/books-dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/40, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/40' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is AI Vs Human Text, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'AI Vs Human Text' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/shanegerami/ai-vs-human-text' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/41, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/41' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which name is YouTube Trending Videos Dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.name = 'YouTube Trending Videos Dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which url is https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.url = 'https://www.kaggle.com/datasets/thedevastator/youtube-trending-videos-dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which creativeWorkType is dataset, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.creativeWorkType = 'dataset' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to Dataset for which metadata_url is http://193.175.161.176:5000/dataset/42, and what are their relationships to Dataset?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (c:Dataset)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/dataset/42' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is Author Name Disambiguation, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'Author Name Disambiguation' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/author-name-disambiguation-using-mcmc' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/76, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/76' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is Technology Radar, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'Technology Radar' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is https://fdda1.gitlab.io/technology-radar/, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'https://fdda1.gitlab.io/technology-radar/' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/77, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/77' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is FDO Manager, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'FDO Manager' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is http://193.175.161.105:8000/, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'http://193.175.161.105:8000/' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/78, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/78' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is FDO Playground, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'FDO Playground' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is http://193.175.161.105:8080/, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'http://193.175.161.105:8080/' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/79, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/79' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is SAT Solver, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'SAT Solver' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is http://116.203.68.5:5002/, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'http://116.203.68.5:5002/' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/80, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/80' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is Metadata Extraction, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'Metadata Extraction' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is http://193.175.161.122:8080/, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'http://193.175.161.122:8080/' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/81, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/81' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is Chatbot-inference, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'Chatbot-inference' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is http://129.26.160.216:7860/, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'http://129.26.160.216:7860/' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/82, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/82' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is automatic-diagnosis-from-clinical-texts, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'automatic-diagnosis-from-clinical-texts' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'https://gitlab.com/fdda1/automatic-diagnosis-from-clinical-texts' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/83, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/83' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is FDO documentation in Gitlab, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'FDO documentation in Gitlab' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is https://fdda1.gitlab.io/fdom, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'https://fdda1.gitlab.io/fdom' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/84, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/84' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is PADME Central Service, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'PADME Central Service' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is https://requester.padme-analytics.de/, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'https://requester.padme-analytics.de/' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/85, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/85' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is PADME Storehouse Platform, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'PADME Storehouse Platform' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is https://storehouse.padme-analytics.de/, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'https://storehouse.padme-analytics.de/' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/86, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/86' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which name is PADME Train Creation Wizard, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {name: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.name = 'PADME Train Creation Wizard' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which url is http://creator.padme-analytics.de/, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.url = 'http://creator.padme-analytics.de/' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which creativeWorkType is code, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {creativeWorkType: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.creativeWorkType = 'code' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "What are the properties of nodes connected to SoftwareApplication for which metadata_url is http://193.175.161.176:5000/webapplication/87, and what are their relationships to SoftwareApplication?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {metadata_url: STRING}", "Cypher": "MATCH (c:SoftwareApplication)<-[r]-(n) WHERE c.metadata_url = 'http://193.175.161.176:5000/webapplication/87' RETURN properties(n) AS props, r"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 1, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'1'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 2, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'2'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 3, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'3'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 4, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'4'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 5, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'5'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 6, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'6'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 7, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'7'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 8, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'8'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 9, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'9'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 10, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'10'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 11, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'11'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where id is 12, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {id: INTEGER}", "Cypher": "MATCH (a:Article{id:'12'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 61, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'61'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 62, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'62'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 63, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'63'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 64, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'64'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 65, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'65'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 66, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'66'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 67, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'67'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 68, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'68'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 69, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'69'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 70, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'70'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 71, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'71'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where id is 72, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {id: INTEGER}", "Cypher": "MATCH (a:Code{id:'72'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 31, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'31'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 32, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'32'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 33, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'33'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 34, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'34'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 35, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'35'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 36, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'36'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 37, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'37'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 38, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'38'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 39, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'39'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 40, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'40'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 41, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'41'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where id is 42, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {id: INTEGER}", "Cypher": "MATCH (a:Dataset{id:'42'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 76, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'76'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 77, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'77'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 78, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'78'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 79, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'79'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 80, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'80'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 81, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'81'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 82, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'82'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 83, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'83'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 84, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'84'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 85, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'85'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 86, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'86'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to SoftwareApplication where id is 87, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nSoftwareApplication {id: INTEGER}", "Cypher": "MATCH (a:SoftwareApplication{id:'87'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is MexPub: Deep Transfer Learning for Metadata Extraction from German Publications, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'MexPub: Deep Transfer Learning for Metadata Extraction from German Publications'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://ieeexplore.ieee.org/abstract/document/9651740, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/9651740'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/1, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/1'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is Automatic recognition of movement patterns in the vojta-therapy using RGB-D data, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'Automatic recognition of movement patterns in the vojta-therapy using RGB-D data'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://ieeexplore.ieee.org/abstract/document/7532555, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/7532555'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/2, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/2'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'EXCITE \u2013 A Toolchain to Extract, Match and Publish Open Literature References'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://ieeexplore.ieee.org/abstract/document/8791194, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791194'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/3, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/3'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'An End-to-End Approach for Extracting and Segmenting High-Variance References from PDF Documents'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://ieeexplore.ieee.org/abstract/document/8791225, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://ieeexplore.ieee.org/abstract/document/8791225'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/4, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/4'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'ECOL: Early Detection of COVID Lies Using Content, Prior Knowledge and Source Information'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-030-73696-5_14'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/5, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/5'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is Whois? Deep Author Name Disambiguation Using Bibliographic Data, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'Whois? Deep Author Name Disambiguation Using Bibliographic Data'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-031-16802-4_16'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/6, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/6'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is COIN: Counterfactual Image Generation for VQA Interpretation, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'COIN: Counterfactual Image Generation for VQA Interpretation'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://arxiv.org/abs/2201.03342, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://arxiv.org/abs/2201.03342'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/7, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/7'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'Bib2Auth: Deep Learning Approach for Author Disambiguation using Bibliographic Data'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://arxiv.org/abs/2107.04382, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://arxiv.org/abs/2107.04382'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/8, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/8'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'Skeleton Ground Truth Extraction: Methodology, Annotation Tool and Benchmarks'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://link.springer.com/article/10.1007/s11263-023-01926-3, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://link.springer.com/article/10.1007/s11263-023-01926-3'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/9, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/9'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'Ensemble and Multimodal Approach for Forecasting Cryptocurrency Price'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://arxiv.org/abs/2202.08967, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://arxiv.org/abs/2202.08967'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/10, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/10'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'Environmental Microbiological Content-Based Image Retrieval System Using Internal Structure Histogram'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://link.springer.com/chapter/10.1007/978-3-319-26227-7_51'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/11, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/11'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where name is Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {name: STRING}", "Cypher": "MATCH (a:Article{name:'Hybrid Physics and Deep Learning Model for Interpretable Vehicle State Prediction'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where url is https://arxiv.org/abs/2103.06727, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {url: STRING}", "Cypher": "MATCH (a:Article{url:'https://arxiv.org/abs/2103.06727'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where creativeWorkType is article, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {creativeWorkType: STRING}", "Cypher": "MATCH (a:Article{creativeWorkType:'article'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Article where metadata_url is http://193.175.161.176:5000/publication/12, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nArticle {metadata_url: STRING}", "Cypher": "MATCH (a:Article{metadata_url:'http://193.175.161.176:5000/publication/12'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is FAIRDS-SDs, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'FAIRDS-SDs'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.com/fdda1/fairds-sds, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.com/fdda1/fairds-sds'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/61, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/61'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is fc-service, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'fc-service'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.com/fdda1/fc-service, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.com/fdda1/fc-service'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/62, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/62'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is fdo-manager, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'fdo-manager'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.com/fdda1/fdo-manager, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.com/fdda1/fdo-manager'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/63, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/63'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is FDOM, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'FDOM'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.com/fdda1/fdom, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/64, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/64'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is fdom-playground, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'fdom-playground'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.com/fdda1/fdom-playground, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.com/fdda1/fdom-playground'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/65, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/65'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is fdomAPI, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'fdomAPI'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.com/fdda1/fdomapi, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.com/fdda1/fdomapi'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/66, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/66'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is sd-signer, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'sd-signer'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.com/fdda1/sd-signer, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.com/fdda1/sd-signer'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/67, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/67'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is Adaptive Digital Library, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'Adaptive Digital Library'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/dhruv.singh.chandel/adaptive-digital-library'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/68, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/68'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is automatic-diagnosis-from-clinical-texts, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'automatic-diagnosis-from-clinical-texts'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/ameerali.khan/automatic-diagnosis-from-clinical-texts'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/69, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/69'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is SAT Solver, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'SAT Solver'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://gitlab.fit.fraunhofer.de/zeyd.boukhers/sat-solver'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/70, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/70'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is author-name-disambiguation-using-mcmc, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'author-name-disambiguation-using-mcmc'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/author-name-disambiguation-using-mcmc'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/71, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/71'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where name is entiy-recognition-and-linkage-for-reference-data, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {name: STRING}", "Cypher": "MATCH (a:Code{name:'entiy-recognition-and-linkage-for-reference-data'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where url is https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {url: STRING}", "Cypher": "MATCH (a:Code{url:'https://github.com/nagaraj-bahubali/entiy-recognition-and-linkage-for-reference-data'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where creativeWorkType is code, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {creativeWorkType: STRING}", "Cypher": "MATCH (a:Code{creativeWorkType:'code'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Code where metadata_url is http://193.175.161.176:5000/code/72, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nCode {metadata_url: STRING}", "Cypher": "MATCH (a:Code{metadata_url:'http://193.175.161.176:5000/code/72'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is Social Media Sentiments Analysis Dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'Social Media Sentiments Analysis Dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kashishparmar02/social-media-sentiments-analysis-dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/31, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/31'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is PII | External Dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'PII | External Dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/alejopaullier/pii-external-dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/32, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/32'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is IMDB Movie Dataset Till Dec-2023, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'IMDB Movie Dataset Till Dec-2023'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kianindeed/imdb-movie-dataset-dec-2023'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/33, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/33'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is LLM: Mistral-7B Instruct texts, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'LLM: Mistral-7B Instruct texts'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/carlmcbrideellis/llm-mistral-7b-instruct-texts'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/34, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/34'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is Fake News Detection, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'Fake News Detection'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/bhavikjikadara/fake-news-detection'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/35, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/35'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is Glassdoor Data science Jobs - 2024, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'Glassdoor Data science Jobs - 2024'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/kuralamuthan300/glassdoor-data-science-jobs'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/36, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/36'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is Grocery Dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'Grocery Dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/elvinrustam/grocery-dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/grocery-dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/37, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/37'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is Mental Health Insights: Vulnerable Cancer Patients, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'Mental Health Insights: Vulnerable Cancer Patients'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/irinhoque/mental-health-insights-vulnerable-cancer-patients'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/38, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/38'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is Brand Sentiment Analysis Dataset (Twitter), and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'Brand Sentiment Analysis Dataset (Twitter)'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/tusharpaul2001/brand-sentiment-analysis-dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/39, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/39'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where name is Books Dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {name: STRING}", "Cypher": "MATCH (a:Dataset{name:'Books Dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where url is https://www.kaggle.com/datasets/elvinrustam/books-dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {url: STRING}", "Cypher": "MATCH (a:Dataset{url:'https://www.kaggle.com/datasets/elvinrustam/books-dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where creativeWorkType is dataset, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {creativeWorkType: STRING}", "Cypher": "MATCH (a:Dataset{creativeWorkType:'dataset'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}, {"Prompt": "Convert the following question into a Cypher query using the provided graph schema!", "Question": "Which nodes are connected to Dataset where metadata_url is http://193.175.161.176:5000/dataset/40, and also to another node?", "Schema": "Graph schema: Relevant node labels and their properties (with datatypes) are:\nDataset {metadata_url: STRING}", "Cypher": "MATCH (a:Dataset{metadata_url:'http://193.175.161.176:5000/dataset/40'})-[r]->(n), (n)-[s]->(m) RETURN labels(n) AS Interim, labels(m) AS Target"}]
